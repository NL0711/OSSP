def sjf_scheduler(orders):
    """
    Input: List of orders as tuples (order_id, arrival_time, burst_time)
    Output: Execution order + waiting/turnaround times.
    """
    # Sort by arrival time, then burst time (SJF non-preemptive)
    orders_sorted = sorted(orders, key=lambda x: (x[1], x[2]))
    
    current_time = 0
    schedule = []
    wait_times = []
    turnaround_times = []
    
    for order in orders_sorted:
        order_id, arrival, burst = order
        start_time = max(current_time, arrival)
        wait = start_time - arrival
        completion = start_time + burst
        turnaround = completion - arrival
        
        schedule.append(order_id)
        wait_times.append(wait)
        turnaround_times.append(turnaround)
        current_time = completion
    
    return {
        "schedule": schedule,
        "wait_times": wait_times,
        "turnaround_times": turnaround_times
    }
